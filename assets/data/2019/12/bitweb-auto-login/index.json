{"hash":"adc5dd754921ba01e034b10e05b52eb94e7d1500","data":{"post":{"title":"BIT-Web Automation：如何利用 iOS 快捷指令自动化登录 BIT-Web 校园网","path":"/2019/12/bitweb-auto-login/","date":"December 29. 2019","timeToRead":10,"cjkWordCount":2348,"cjkReadTime":11,"tags":[{"id":"Automation","title":"Automation","path":"/tag/Automation/"},{"id":"Shortcuts","title":"Shortcuts","path":"/tag/Shortcuts/"},{"id":"BIT","title":"BIT","path":"/tag/BIT/"}],"description":"自动化登录 BIT-Web 的最佳实践","published":true,"content":"<p>BIT-Web 是北京理工大学校园 Wi-Fi，专门用于笔记本等桌面设备，另外还有 BIT-Mobile 用于移动设备。但是，BIT-Mobile 有时候并没有 BIT-Web 稳定，自动登录不是那么靠谱，我们也不能通过 BIT-Mobile 登录使用免费运营商宽带，这些场景下我们都需要在移动设备上连接至 BIT-Web 进行手动登录。</p>\n<figure><img src=\"https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042.png\" alt=\"BIT-Web 和 BIT-Mobile 的对比\"><figcaption>BIT-Web 和 BIT-Mobile 的对比</figcaption></figure>\n<p>最近我的同学跟我说，BIT-Web 的登录页面在移动端（尤其是 Android 平台）上不能正常的显示「密码管理器」，也就不能直接填充密码，每次都需要手动输入。这令人非常烦恼，如何才能实现在连接到 BIT-Web 上之后自动发送登录认证请求来连接至校园网呢？</p>\n<h2 id=\"实现思路\"><a href=\"#%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>实现思路</h2>\n<p>对于我的学校来说，登录至校园网的基本操作就是：</p>\n<ul>\n<li>连接到 BIT-Web</li>\n<li>在浏览器中打开网址 <code class=\"language-text\">t.cn</code> 来重定向至登录页面 <code class=\"language-text\">10.0.0.55</code></li>\n<li>输入账号密码并点击登录</li>\n</ul>\n<p>在这背后，我们事实上是给学校校园网登录认证服务器发送了一个带有我们「账号」和「密码」的登录请求（实际来说可能是账号密码组合出的加密认证令牌），之后校园网认证服务器核实我们的身份，并反馈我们认证结果，给予上网权限。</p>\n<figure><img src=\"https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-1.png\" alt=\"连接至 BIT-Web 并进行认证过程发送的网络请求\"><figcaption>连接至 BIT-Web 并进行认证过程发送的网络请求</figcaption></figure>\n<p>这样来说，我们事实上就只需要在每次连接至 BIT-Web 网络时，自动发送这一请求，即可实现自动登录校园网的功能。在 iOS 平台，我们有相当方便的工具来制作发送请求的脚本：快捷指令 Shortcuts，利用 Shortcuts 我们可以定制一个「动作」，实现自动登录的功能。</p>\n<p>另外，iOS 13 里面的 Shortcuts 加入了全新的 <strong>Automation</strong>：基于场景的动作自动化执行功能。利用这一特性，我们就可以定义「连接到 Wi-Fi 名称为 BIT-Web 的网络」这一「触发器」，从而实现自动触发动作的能力。</p>\n<p>好啦，万事俱备，我们开始实现吧～</p>\n<h2 id=\"操作步骤\"><a href=\"#%E6%93%8D%E4%BD%9C%E6%AD%A5%E9%AA%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>操作步骤</h2>\n<p>接下来，我会以 iOS 的 Shortcuts 中「自动登录校园网」的实现为例，详细介绍我们具体如何实现这样的自动化操作功能。</p>\n<p>首先需要说明的是，iOS 的 Shortcuts 里面能够执行的算法有限，但是就今天（2019.12.25）来说，我校校园网服务器的登录认证接口已经升级，需要进行加密运算生成登录令牌才能正确认证。考虑到我们的脚本仅仅在校园网内部可控环境下执行，这里我们退而求其次，使用旧接口：<strong>直接发送明文账号密码进行认证的 API 来登录校园网。</strong></p>\n<h3 id=\"明确网络请求参数\"><a href=\"#%E6%98%8E%E7%A1%AE%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>明确网络请求参数</h3>\n<p>BIT-Web 的旧登录请求接口是如下配置的：</p>\n<pre class=\"language-http\"><code class=\"language-http\"><span class=\"token request-line\"><span class=\"token method property\">POST</span> <span class=\"token request-target url\"><span class=\"token path\"><span class=\"token path-separator\">/</span>include<span class=\"token path-separator\">/</span>auth_action.php</span></span> <span class=\"token http-version property\">HTTP/1.1</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Type</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">application/x-www-form-urlencoded</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Host</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">10.0.0.55:801</span></span>\n<span class=\"token header\"><span class=\"token header-name keyword\">Content-Length</span><span class=\"token punctuation\">:</span> <span class=\"token header-value\">75</span></span>\n\naction=login&amp;username={YOUR_USERNAME}&amp;password={YOUR_PASSWORD}&amp;ac_id=8&amp;save_me=1&amp;ajax=1</code></pre>\n<p>其中 <code class=\"language-text\">{YOUR_USERNAME}</code> 以及 <code class=\"language-text\">{YOUR_PASSWORD}</code> 均为明文账密，我校曾经就是这样简单粗暴。简单在终端中用 cURL 工具进行测试，在连接 BIT-Web 且尚未登录的情况下，在终端中输入如下的命令：</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">--request</span> POST <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--url</span> http://10.0.0.55:801/include/auth_action.php <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--header</span> <span class=\"token string\">'content-type: application/x-www-form-urlencoded'</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--data</span> <span class=\"token assign-left variable\">action</span><span class=\"token operator\">=</span>login <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--data</span> <span class=\"token assign-left variable\">username</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>YOUR_USERNAME<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--data</span> <span class=\"token assign-left variable\">password</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>YOUR_PASSWORD<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--data</span> <span class=\"token assign-left variable\">ac_id</span><span class=\"token operator\">=</span><span class=\"token number\">8</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--data</span> <span class=\"token assign-left variable\">save_me</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">\\</span>\n  <span class=\"token parameter variable\">--data</span> <span class=\"token assign-left variable\">ajax</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></code></pre>\n<p>将你自己的账号密码带入其中，如果得到类似下面的包含有 <code class=\"language-text\">login_ok</code> 的结果，同时你可以连接互联网，那么说明你的认证成功。</p>\n<blockquote>\n<p><strong>💡 注意：</strong></p>\n<p>这里如果登录失败，校园网认证服务器会直接返回登录失败的原因。比如：已欠费、密码错误等。按照错误信息进行相应的调试即可。</p>\n</blockquote>\n<figure><img src=\"https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-2.png\" alt=\"cURL 测试登录 BIT-Web 效果\"><figcaption>cURL 测试登录 BIT-Web 效果</figcaption></figure>\n<p>上面的 HTTP 请求我来简单分解介绍一下。首先，请求是 <code class=\"language-text\">POST</code> 的方法，格式为 <code class=\"language-text\">application/x-www-form-urlencoded</code>，请求地址（即 url 地址）为 <code class=\"language-text\">http://10.0.0.55:801/include/auth_action.php</code>，参数分别为：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">值</th>\n<th align=\"left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code class=\"language-text\">action</code></td>\n<td align=\"left\"><code class=\"language-text\">login</code></td>\n<td align=\"left\">设置动作为登录</td>\n</tr>\n<tr>\n<td align=\"left\"><code class=\"language-text\">username</code></td>\n<td align=\"left\"><code class=\"language-text\">{YOUR_USERNAME}</code></td>\n<td align=\"left\">发送账户（即学号）</td>\n</tr>\n<tr>\n<td align=\"left\"><code class=\"language-text\">password</code></td>\n<td align=\"left\"><code class=\"language-text\">{YOUR_PASSWORD}</code></td>\n<td align=\"left\">发送校园网密码</td>\n</tr>\n<tr>\n<td align=\"left\"><code class=\"language-text\">ac_id</code></td>\n<td align=\"left\">8</td>\n<td align=\"left\">代表登录 BIT-Web（BIT-Mobile 登录请求的 <code class=\"language-text\">ac_id</code> 不一样）</td>\n</tr>\n<tr>\n<td align=\"left\"><code class=\"language-text\">save_me</code></td>\n<td align=\"left\">1</td>\n<td align=\"left\">保存当前登录 session</td>\n</tr>\n<tr>\n<td align=\"left\"><code class=\"language-text\">ajax</code></td>\n<td align=\"left\">1</td>\n<td align=\"left\">（猜测）表示异步发送请求</td>\n</tr>\n</tbody>\n</table>\n<p>搞清楚我们具体的发送信息之后，接下来我们开始着手在 iOS 上面制作 Shortcuts 动作。</p>\n<h3 id=\"制作-shortcuts-动作\"><a href=\"#%E5%88%B6%E4%BD%9C-shortcuts-%E5%8A%A8%E4%BD%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>制作 Shortcuts 动作</h3>\n<p>首先，在 Shortcuts 里面创建新动作，并搜索加入模块「Get contents of URL」。点击模块下部的 Show More，在其中按下图进行配置：</p>\n<!-- ![BIT-Web 登录认证请求模块](https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-3.png) -->\n<p><img src=\"https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-3.png\" alt=\"BIT-Web 登录认证请求模块\" width=\"500px\"></p>\n<ul>\n<li>URL 设置为：<code class=\"language-text\">http://10.0.0.55:801/include/auth_action.php</code></li>\n<li>Method 设置为：<code class=\"language-text\">POST</code></li>\n<li>\n<p>之后会出现 Request Body 的设置字段：</p>\n<ul>\n<li>选择 Request Body 为 <strong>Form</strong></li>\n<li>点击 Add new field，选择 Text 类型。将 Key 字段设置为 <code class=\"language-text\">action</code>，Text 设置为字段设置为 <code class=\"language-text\">login</code></li>\n<li>继续点击 Add new field 并选择 Text 类型。将 Key 字段设置为 <code class=\"language-text\">username</code>，Text 设置为字段设置为<strong>你的校园网用户名（学号）</strong></li>\n<li>继续点击 Add new field 并选择 Text 类型。将 Key 字段设置为 <code class=\"language-text\">password</code>，Text 设置为字段设置为<strong>你的校园网账户密码</strong></li>\n<li>继续点击 Add new field 并选择 Text 类型。将 Key 字段设置为 <code class=\"language-text\">ac_id</code>，Text 设置为字段设置为 8</li>\n<li>继续点击 Add new field 并选择 Text 类型。将 Key 字段设置为 <code class=\"language-text\">save_me</code>，Text 设置为字段设置为 1</li>\n<li>继续点击 Add new field 并选择 Text 类型。将 Key 字段设置为 <code class=\"language-text\">ajax</code>，Text 设置为字段设置为 1</li>\n</ul>\n</li>\n</ul>\n<p>在模块「Get contents of URL」下方添加模块「Text」，<strong>将「Text」的值设置为「Contents of URL」</strong>，也就是上一步网络请求的返回结果。</p>\n<!-- ![将返回数据用 Text 模块规格化](https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-4.jpg) -->\n<p><img src=\"https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-4.jpg\" alt=\"将返回数据用 Text 模块规格化\" width=\"500px\"></p>\n<p>继续，在下面添加模块「If」，用来判断我们登录成功与否。将 If 模块的判断条件设置为「contains」，包含字符设置为 <code class=\"language-text\">login_ok</code>：</p>\n<ul>\n<li>如果匹配成功：说明登录 BIT-Web 成功，发送登录成功通知</li>\n<li>如果匹配失败（进入 Otherwise 部分）：说明登录 BIT-Web 失败，发送登录失败通知以及失败的请求返回的数据</li>\n</ul>\n<!-- ![BIT-Web 登录返回数据处理模块](https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-5.jpg) -->\n<p><img src=\"https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-5.jpg\" alt=\"BIT-Web 登录返回数据处理模块\" width=\"500px\"></p>\n<p>之后，我们测试。将手机连接至校园网 BIT-Web，尝试执行这一 Shortcuts 动作。如果一切顺利，那么你应该可以登录成功，得到如下通知：</p>\n<!-- ![BIT-Web 登录成功](https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-6.jpg) -->\n<p><img src=\"https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-6.jpg\" alt=\"BIT-Web 登录成功\" width=\"500px\"></p>\n<h3 id=\"定义动作触发条件\"><a href=\"#%E5%AE%9A%E4%B9%89%E5%8A%A8%E4%BD%9C%E8%A7%A6%E5%8F%91%E6%9D%A1%E4%BB%B6\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>定义动作触发条件</h3>\n<p>接下来，我们在 Shortcuts 中设置连接至 BIT-Web 之后自动触发这一动作的功能。在今年秋天 iOS 13 的更新中，Shortcuts 同样更新了其 Automation 的功能。这里我们所要做的就是设置一个「触发器」使得 iPhone 能够自动连接到 WiFi SSID 为 BIT-Web 的网络之后提醒我们执行上面创建的 Shortcuts 动作。</p>\n<p>我们点击 Shortcuts 中间菜单「Automation」，点击上方加号，选择 Create Personal Automation。之后，在菜单中选择 WLAN，在下方菜单中点击 Choose 并选择 BIT-Web。</p>\n<figure><img src=\"https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-7.png\" alt=\"配置连接至 BIT-Web 的自动触发器\"><figcaption>配置连接至 BIT-Web 的自动触发器</figcaption></figure>\n<p>之后，点击右上角 Next，在添加动作模块的页面点击加号，添加一个「Run Shortcut」的模块。</p>\n<figure><img src=\"https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-8.jpg\" alt=\"添加 Run Shortcut 的模块\"><figcaption>添加 Run Shortcut 的模块</figcaption></figure>\n<p>接下来，将「Run Shortcut」模块的执行动作设置为我们刚刚制作的 BIT-Web Shortcut 动作。其他内容无需改动。</p>\n<figure><img src=\"https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-9.png\" alt=\"配置自动执行上一步制作的 BIT-Web Shortcut 动作\"><figcaption>配置自动执行上一步制作的 BIT-Web Shortcut 动作</figcaption></figure>\n<p>之后，点击 Next > Done 保存动作。</p>\n<h2 id=\"效果\"><a href=\"#%E6%95%88%E6%9E%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>效果</h2>\n<p>如果一切顺利，那么你的 iPhone 连接至 BIT-Web 之后，Shortcuts 应用就会自动弹出提醒请求执行 BIT-Web 登录的动作。在通知提醒上面点击执行，我们就可以直接登录至 BIT-Web。</p>\n<blockquote>\n<p><strong>🤔 注意：</strong></p>\n<p>这一快捷指令以及利用快捷指令登录 BIT-Web 是上个月的思路和想法，在上个月这一功能一直完好可用，但是最近我注意到 Wifi 触发器总是无法正确的触发动作的运行，同时在 Reddit 社区里面也有不下 5 条抱怨 WiFi 触发器不工作的内容。因此我怀疑确实是 iOS 出现的 bug 导致的。</p>\n</blockquote>\n<p>另外，如果上面的触发总是无法成功，那么你也可以直接将 BIT-Web Shortcut 动作固定在主屏幕，每次连接到 BIT-Web 之后手动点击执行快捷指令即可。这肯定比跳转登录认证页面输入账号密码登录方便许多。</p>\n<figure><img src=\"https://cdn.spencer.felinae98.cn/blog/2020/07/20200722-215042-10.jpg\" alt=\"直接将 BIT-Web 登录快捷指令固定到主屏幕\"><figcaption>直接将 BIT-Web 登录快捷指令固定到主屏幕</figcaption></figure>\n<p>自动化的操作比人力重复无效劳动要方便许多，打卡、签到，日复一日的登录、提醒，都可以利用「自动化」的思路进行完成。本文就介绍到这里，感谢阅读。</p>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/bitweb-auto-login.a209973.67eeaf182a3e269d6249d977d054961f.png","size":{"width":1280,"height":400},"sizes":"(max-width: 1280px) 100vw, 1280px","srcset":["/assets/static/bitweb-auto-login.a67b0b2.67eeaf182a3e269d6249d977d054961f.png 480w","/assets/static/bitweb-auto-login.a209973.67eeaf182a3e269d6249d977d054961f.png 1280w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1280 400' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-f8239d565087fc6d71be596bfd05216d'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-f8239d565087fc6d71be596bfd05216d)' width='1280' height='400' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAUCAIAAACyFKxoAAAACXBIWXMAAAsTAAALEwEAmpwYAAADoUlEQVRIx81XW0wTWRg%2bttvOnJkWL5GNuFEflJhoYoyRiwpykbbTmSlFsd6wXkl33WW1xhc1ZnVRwAtUUUAFNV5CBGE6t16oGBR1N5ZKsfiw%2bKAxMdEHEx/NPq3%2bBY1kn8dkku/h5OTP5P/O/33fnINIp/y9wCrf8eNfgTT7FvP/HbNdJBhpUoGEOZV2hWChITdtCGBWoV1hWFB8iOJU0inBYp5/1FIR/cKBkWleta7tA2BOASZYIw4aEIAWaXfEui4G7U60ZbKJhFPJqOwHMhgKxmtMjEK5wpbySJohsJo8HF1ICFpnFYKRLbyypS4xe0M0rSKHBDuEQ5q1PlJVn7DyitkuTUxMRxMA0KAcXqVYGRUJa48%2b%2bb0lVXMhlVfzYDqnzuDVlXsHfz3/7LfzqcpjcVQctJSHsnwJiztKaDEEbQiA4sEDFKdMWSPuax3deDxR3ZQEeE8%2brWpI%2bM6O%2bAIjntq4vzVlKBMt5eFZ1U%2bgXkcEJiSEWdloSxPYdGJod%2bPwL%2bdGdjUOA42fAyM7Tw9vrhva15ICJ0CZySYQuvIA4RABkDNodW9V/RA0DTRKDjxavPveol33Vu9/6G8b9QWSW08lkV2dWglBpJJ68QALeR%2bc7RvK3PYY0pPkQ5me2J7m1HxvDBX0wNkDYLFwR/%2be5mc/emKYj0AQkZCkvKqjGM1Yf9dS0QcEIEmN%2bR24sNNaEUWremtvjdXe/AcVCASrmuf4jYtO0u4%2b0iGZHaK%2bJAShTjAixUrIFnZ4mjjukIEJoWLpovKqTX6J8nuy1vWW2A%2bvLD2CSmSrOzzP/5wu15OJwZeYD1mZbtrWvWD7gLdtLHPn3yi/6/bAm67Bd2iFtHxbd0dr41%2bdNfM9N35gwl9soLMfmUo7hZkueYr3RW7npyUNb1HBnUjifVfvI2NOC2L6vQca/r2bl%2bO9jBxR7BT1d5lLQzEzEqBwf3%2b2N4pKg9Hkh4/P79u97aisj9kcEGqLlm25hGwREJs%2bCYCWVMLWY/qpGueeA7/ej7/58%2bF/tjOvpnEyVdZlmluD8wKkK6bVRUhzAhLJhYjiW8bsg4alTTM8A6/H4mMvkk8H5fwd11HuVfOyRuOSelzYAWXpYh1OADrDRdesOQ1U7ukMd7T9Znc8Unflwh9ZXAde1U4XXSGZoHVFsy4fNN8iVaCcQYoRQCeG0mAGK5AOwbBGoJ0iHj91QqcvsklWhscAmYaMOdkM12ln%2bvI8vqn9k/IzRnlFNPkCW2IAAAAASUVORK5CYII=' /%3e%3c/svg%3e"}},"previous":{"title":"cwim 背后的故事：Rust 与 Ownership","path":"/2020/01/cli-app-in-rust/"},"next":{"title":"IFTTT x Integromat：微博 to Twitter 自动转发的最佳实践","path":"/2019/11/weibo-to-twitter/"}},"context":{"previousElement":"3257345a71828a405ad4b86d931de69b","nextElement":"313f0ca7d93ad622ae59c3d0f907bb14","id":"e45db455693053dde73a2b656a72c0c1"}}